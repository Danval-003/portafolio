(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[974],{1447:(e,t,a)=>{"use strict";a.d(t,{default:()=>m});var i=a(5155),n=a(2115),s=a(5169),r=a(2138);let l=e=>{let{cardWidth:t=200,height:a=500,autoPlayInterval:l,data:o,RenderItem:c,visibleCount:d=3,spacingPercent:h}=e,u=o.length,[p,m]=(0,n.useState)(Math.floor(u/2)),[f,g]=(0,n.useState)(!1),b=(0,n.useRef)([]),v=void 0!==h?h:100/(d+1),x=d%2==0,w=.5*!!x,y=x?d/2:Math.floor(d/2),j=()=>{b.current.forEach(clearTimeout),b.current=[]},k=(0,n.useCallback)(e=>{f||(g(!0),j(),m(e),b.current.push(setTimeout(()=>g(!1),600)))},[f]),N=(0,n.useCallback)(()=>k((p-1+u)%u),[p,k,u]),C=(0,n.useCallback)(()=>k((p+1)%u),[p,k,u]);return(0,n.useEffect)(()=>{if(!l)return;let e=setInterval(()=>{f||C()},l);return()=>clearInterval(e)},[l,f,C]),(0,n.useEffect)(()=>()=>j(),[]),(0,i.jsxs)("div",{className:"relative w-full overflow-hidden",style:{width:"100%",height:"".concat(a,"px")},children:[(0,i.jsx)("div",{className:"relative w-full perspective",style:{width:"100%",height:"".concat(a,"px")},children:o.map((e,n)=>{let s=n-p;s>Math.floor(u/2)&&(s-=u),s<-Math.floor(u/2)&&(s+=u);let r=s+w,l=Math.abs(r),o=l<=y,d=Math.round((y-l)*100);d=Math.max(d,0);let h=-(5*Math.abs(r)),m={position:"absolute",top:"50%",left:"".concat(50+r*v,"%"),width:"".concat(t,"px"),height:"".concat(a,"px"),transformStyle:"preserve-3d",backfaceVisibility:"hidden",transform:"translate(-50%, -50%) \n                        rotateY(".concat(15*r,"deg) \n                        translateZ(").concat(h,"vw) \n                        scale(").concat(x||0===r?1:.8,")"),transition:"transform ".concat(600,"ms ease-in-out, \n                         opacity ").concat(600,"ms ease-in-out, \n                         left ").concat(600,"ms ease-in-out"),opacity:+!!o,zIndex:d,pointerEvents:o?"auto":"none"};return(0,i.jsx)("div",{className:"transform-gpu transition-all ease-in-out",style:m,children:(0,i.jsx)(c,{...e,width:t,height:a})},n)})}),(0,i.jsx)("button",{onClick:N,disabled:f,className:"absolute left-4 top-1/2 transform -translate-y-1/2 p-2 rounded-full bg-gray-800 text-white disabled:opacity-50",children:(0,i.jsx)(s.A,{className:"w-5 h-5"})}),(0,i.jsx)("button",{onClick:C,disabled:f,className:"absolute right-4 top-1/2 transform -translate-y-1/2 p-2 rounded-full bg-gray-800 text-white disabled:opacity-50",children:(0,i.jsx)(r.A,{className:"w-5 h-5"})})]})};var o=a(6874),c=a.n(o),d=a(6766),h=a(3786);let u=e=>{let{title:t,description:a,image:n,link:s,width:r,height:l}=e,o=.8*l;return(0,i.jsx)("div",{style:{width:r,height:o,marginTop:"1rem"},className:"relative group mx-auto",children:(0,i.jsxs)(c(),{href:s,target:"_blank",rel:"noopener noreferrer",className:"absolute inset-0 flex flex-col bg-[#1E90FF] backdrop-blur-lg \\ border-2 border-black rounded-2xl shadow-[8px_8px_0_rgba(0,0,0,1)] \\ hover:-translate-y-1 hover:shadow-[12px_12px_0_rgba(0,0,0,1)] \\ transition-transform duration-200 ease-out",children:[n&&(0,i.jsxs)("div",{className:"relative w-full overflow-hidden rounded-t-2xl",style:{height:.4*o},children:[(0,i.jsx)(d.default,{src:n,alt:t,fill:!0,style:{objectFit:"cover"},className:"transition-transform duration-500 group-hover:scale-110"}),(0,i.jsx)("div",{className:"absolute inset-0 bg-gradient-to-t from-black/40 to-transparent"})]}),(0,i.jsxs)("div",{className:"flex flex-col flex-grow p-4 space-y-2",children:[(0,i.jsx)("h3",{className:"text-lg text-[#ffffff] font-heading leading-snug truncate",style:{fontFamily:"'Bungee', sans-serif"},children:t}),(0,i.jsx)("p",{className:"text-sm text-[#ffffff] font-body line-clamp-3",style:{fontFamily:"'Rubik', sans-serif"},children:a})]}),(0,i.jsx)("div",{className:"flex justify-end p-3",children:(0,i.jsx)("span",{className:"p-2 bg-[#FFD300] text-[#1E1E1E] rounded-full shadow-md \\ hover:bg-[#E1B12C] transition-colors duration-200",children:(0,i.jsx)(h.A,{size:18})})})]})})},p=e=>"".concat("").concat(e),m=()=>{let[e,t]=(0,n.useState)({width:0,height:0});(0,n.useEffect)(()=>{let e=()=>{t({width:window.innerWidth,height:window.innerHeight})};return e(),window.addEventListener("resize",e),()=>{window.removeEventListener("resize",e)}},[]),p("/assets/common/placeholder.png");let a=e.width>1200?3:e.width>800?2:1;return(0,i.jsx)("div",{style:{marginTop:"2rem",width:"100%"},children:(0,i.jsx)(l,{data:[{title:"AI-Powered Brain Tumor Segmentation",description:"Harness the power of a U-Net deep learning model to accurately segment brain tumors in MRI scans.",link:"https://github.com/Danval-003/brain-tumor-segmentation",image:p("/assets/projects/brain.png")},{title:"Minecraft Raycasting Engine: Real-Time Block Diorama",description:"Experience a custom C++ raycasting engine rendering a Minecraft-themed 3D diorama with reflective and refractive materials.",link:"https://github.com/Danval-003/Minecraft_for_raycaster",image:p("/assets/projects/raycasting.png")},{title:"WaterCycle Visualizer: Interactive Climate Explorer",description:"Immerse yourself in Earth’s water cycle with an interactive React & Vite web application.",link:"https://github.com/Danval-003/EverythingStartsWithWater",image:p("/assets/projects/everitingStartsWithWater.png")},{title:"Danvaland: Immersive Virtual Portfolio",description:"Dive into Danvaland, an interactive web portfolio showcasing dynamic landscapes and sleek UI components.",link:"https://github.com/Danval-003/Danvaland",image:p("/assets/projects/danvaland.webp")},{title:"Protobuf-Powered C++ TCP Chat Server",description:"Implement a robust chat application using C++, TCP sockets, and Protocol Buffers.",link:"https://github.com/Danval-003/TCP_chat_server",image:p("/assets/projects/chatTCP.webp")},{title:"B-Line: Your Shopping Companion",description:"B-Line is an Android app built in Kotlin that aggregates product listings from multiple online retailers, presenting each item with its current price, source, and a direct link—all in a clear, organized feed. Designed to save you time, it combines smart search, advanced filters, and a favorites feature for a faster, more personalized shopping experience.",link:"https://github.com/Dahernandezsilve/Project_B-Line",image:p("/assets/projects/b-line.png")},{title:"LexicalAnalyzer-LL1-SRL-Scanner API",description:"The LexicalAnalyzer-LL1-SRL-Scanner API is a robust Go-based application designed to facilitate lexical analysis using Yalex files and an SLR table based on Yalp files. This API empowers text analysis by converting input text into tokens using scanners, which meticulously identify and categorize various elements within the text. These tokens are subsequently utilized by the SLR table to perform syntactical analysis.",link:"https://github.com/Danval-003/LexicalAnalyzer-LL1-SRL-Scanner",image:p("/assets/projects/scanner.jpeg")}],RenderItem:u,cardWidth:e.width*(a>=3?.3:2===a?.35:.7),height:.5*e.height,autoPlayInterval:3e3,spacingPercent:a>=3?30:2===a?40:50,visibleCount:a})})}},8653:(e,t,a)=>{Promise.resolve().then(a.bind(a,1447)),Promise.resolve().then(a.t.bind(a,6874,23)),Promise.resolve().then(a.t.bind(a,3063,23))}},e=>{e.O(0,[125,441,964,358],()=>e(e.s=8653)),_N_E=e.O()}]);